strat main { 
  Seq(
    Onf(conditionals),
    Onf(existentials),
    Onf(interrogatives)
    )
}

package conditionals {

    rule r2a { % Realistic conditional
        pattern {
            IF [lemma=re"אם\|אילו\|לו", !Cxn]; 
            MAIN -[advcl]-> COND; 
            COND -[mark]-> IF
        } 
        without { KI [lemma="כי"]; IF < KI }
        commands { IF.Cxn= "Conditional" }
    }

    rule r2b { % Unrealistic conditional
        pattern {
            IF [lemma=re"אילו\|לו", !Cxn];
            HAYA [lemma="היה"] ; 
            MAIN -> HAYA ;MAIN -[advcl]-> COND; 
            COND -[mark]-> IF
        } 
        without { KI [lemma="כי"]; IF < KI }
        commands { IF.Cxn=Conditional }
    }

    rule r2c { % Conditional MWE
        pattern { 
            B [lemma="ב", !Cxn]; 
            M [lemma="מידה"]; 
            W [lemma="ו"]; 
            B<M; 
            M<W; 
            COND -[mark]-> B; 
            MAIN -[advcl]-> COND;
        }
        commands { B.Cxn=Conditional }
    }

    rule r2d { % Conditional MWE
        pattern { 
            B [lemma="ב", !Cxn]; 
            M [lemma="תנאי"]; 
            W [lemma="ש"]; 
            B<M; 
            M<W; 
            COND -[mark]-> B; 
            MAIN -[advcl]-> COND 
        }
        commands { B.Cxn=Conditional }
    }

}

package existentials {
    rule r3a { % Present tense existential
        pattern { 
            THERE [lemma="יש", !Cxn]; 
            THERE -[nsubj]->SUBJ 
        } 
        without {THERE-[obl]->N}
        without {LE[lemma="ל"]; N -[case]->LE}
        commands { THERE.Cxn=Existential }
    }

    rule r3a_bis { % Present tense existential
        pattern { 
            THERE [lemma="יש", Cxn<>re".*Existential.*"]; 
            THERE -[nsubj]->SUBJ 
        } 
        without {THERE-[obl]->N}
        without {LE[lemma="ל"]; N -[case]->LE}
        commands { THERE.Cxn= THERE.Cxn + "," + "Existential" }
    }

    rule r3b { % Past/future tense existential
        pattern { 
            THERE [lemma="היה",HebExistential="Yes", !Cxn]; 
            THERE -[nsubj]->SUBJ 
        } 
        without {THERE-[obl]->N}
        without {LE[lemma="ל"]; N -[case]->LE}
        commands { THERE.Cxn=Existential }
    }

    rule r3b_bis { % Past/future tense existential
        pattern { 
            THERE [lemma="היה",HebExistential="Yes", Cxn<>re".*Existential.*"]; 
            THERE -[nsubj]->SUBJ 
        } 
        without {THERE-[obl]->N}
        without {LE[lemma="ל"]; N -[case]->LE}
        commands { THERE.Cxn= THERE.Cxn + "," + "Existential" }
    }

    rule r3d { % Negative existence
            pattern { 
                THERE [lemma="אין", !Cxn]; 
                THERE -[nsubj]->SUBJ
            } 
            without {THERE-[obl]->N}
            without {LE[lemma="ל"]; N -[case]->LE}
            commands { THERE.Cxn=Existential }
        }

    rule r3d_bis { % Negative existence
            pattern { 
                THERE [lemma="אין", Cxn<>re".*Existential.*"]; 
                THERE -[nsubj]->SUBJ
            } 
            without {THERE-[obl]->N}
            without {LE[lemma="ל"]; N -[case]->LE}
            commands { THERE.Cxn= THERE.Cxn + "," + "Existential" }
        }

    rule r3e { % Verbal "exist"
        pattern {
            THERE [lemma="קיים", !Cxn]; 
            THERE -[nsubj]->SUBJ 
        } 
        without {THERE [HebBinyan="PIEL"]}
        commands { THERE.Cxn=Existential }
    }

    rule r3e_bis { % Verbal "exist"
        pattern {
            THERE [lemma="קיים", Cxn<>re".*Existential.*"]; 
            THERE -[nsubj]->SUBJ 
        } 
        without {THERE [HebBinyan="PIEL"]}
        commands { THERE.Cxn= THERE.Cxn + "," + "Existential" }
    }
}

package interrogatives {

    rule r1a { %  Main clause interrogatives (question mark)
        pattern { 
            Q [form="?", !Cxn] 
        }
        commands { Q.Cxn=Interrogative }
        }

    rule r1a_bis { %  Main clause interrogatives (question mark)
        pattern { 
            Q [form="?", Cxn<>re".*Interrogative.*"] 
        }
        commands { Q.Cxn=Q.Cxn + "," + Interrogative }
        }

%    rule r1b { % Direct polar interrogatives (Q y/n particle)
%        pattern { 
%            H [form="האם"];
%        }
%        without { Q [form="?", !Cxn] }
%        commands { Q.Cxn=Interrogative }
%    }

    rule r1c { % Embedded wh-question
        pattern {
            WH [upos=ADV,lemma=re"מי\|מה\|למה\|מדוע\|איפה\|היכן\|איה\|לאן\|מאין\|מתי\|איך\|כיצד\|כמה\|איזה", !Cxn]; 
            V [upos=VERB|ADJ]; 
            V -> WH
        }  
        without {X [lemma="?"]} 
        without {WH -[acl:relcl|acl]-> CL} 
        without {V -[nsubj]-> WH}
        commands { WH.Cxn=Interrogative }
    }

    rule r1c_bis { % Embedded wh-question
        pattern {
            WH [upos=ADV,lemma=re"מי\|מה\|למה\|מדוע\|איפה\|היכן\|איה\|לאן\|מאין\|מתי\|איך\|כיצד\|כמה\|איזה", Cxn<>re".*Interrogative.*"]; 
            V [upos=VERB|ADJ]; 
            V -> WH
        }  
        without {X [lemma="?"]} 
        without {WH -[acl:relcl|acl]-> CL} 
        without {V -[nsubj]-> WH}
        commands { WH.Cxn=WH.Cxn + "," + Interrogative }
    }

    rule r1d { % Embedded subject question
        pattern { 
            MI [lemma=re"מי\|מה", upos=ADV, !Cxn]; 
            V -[nsubj]-> MI 
        } 
        without {MI -[acl:relcl]-> RC} 
        without {X [form="?"]}
        commands { MI.Cxn=Interrogative }
    }

    rule r1d_bis { % Embedded subject question
        pattern { 
            MI [lemma=re"מי\|מה", upos=ADV, Cxn<>re".*Interrogative.*"]; 
            V -[nsubj]-> MI 
        } 
        without {MI -[acl:relcl]-> RC} 
        without {X [form="?"]}
        commands { MI.Cxn=MI.Cxn + "," + Interrogative }
    }
}