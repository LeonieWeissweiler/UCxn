strat main { 
  Seq(
    Onf(conditionals),
    Onf(existentials),
    Onf(interrogatives),
    Onf(npn)
    )
}

package conditionals {

  rule ConditionRealisticConjunction { 
    pattern {
      CONJ [ lemma = re"ⲉϣϫⲉ\|ⲉϣⲱⲡⲉ" ];
      _anchor_ -[advcl]-> PROTASIS;
      PROTASIS -> CONJ;
    }
        commands { 
           _anchor_.Cxn="Conditional-Realis";
           PROTASIS.CxnElt="Protasis";
           _anchor_.CxnElt="Apodosis";
       }
  }

  rule ConditionRealisticAux { 
    pattern {
    _anchor_ -[advcl]-> PROTASIS;
    CONJ [ xpos=re"ACOND.*"];
    PROTASIS -> CONJ;
    }
    without {
      AUX [xpos=FUT];
      PRET [xpos=CPRET];
      _anchor_ -> AUX;
      _anchor_ -> PRET;
    }
    commands {
           _anchor_.Cxn="Conditional-Realis";
           PROTASIS.CxnElt="Protasis";
           _anchor_.CxnElt="Apodosis";
    }
  }

  rule ConditionUnrealistic { 
    pattern {
      _anchor_ -[advcl]-> PROTASIS;
      AUX [xpos=FUT];
      _anchor_ -> AUX; 
      PRET [xpos=CPRET];
      _anchor_ -> PRET;
    }
    commands {
           _anchor_.Cxn="Conditional-Irrealis";
           PROTASIS.CxnElt="Protasis";
           _anchor_.CxnElt="Apodosis";
    }  
  }

}

package existentials {

  rule ExistentialPositive { 
    pattern {
      _anchor_ [lemma="ⲟⲩⲛ",xpos=EXIST];
      _anchor_ -[nsubj]-> SBJ;
      _anchor_[!Cxn];
    }
       commands { 
           _anchor_.Cxn="Existential-ExistPred";
           SBJ.CxnElt="Pivot";
       }
  }


  rule ExistentialNegative { 
    pattern {
      _anchor_ [lemma="ⲙⲛ",xpos=EXIST];
      _anchor_ -[nsubj]-> SBJ;
    }
       commands { 
           _anchor_.Cxn="Existential-NotExistPred";
           SBJ.CxnElt="Pivot";
       }
  }


package interrogatives {

  rule InterrogativeWh { 
    pattern {
      PAR -[re"root\|ccomp"]-> _anchor_; 
      PINT[xpos="PINT"]; 
      _anchor_ -> PINT;
    }    
    commands { 
        _anchor_.Cxn="Interrogative-WHInfo";
        _anchor_.CxnElt="Clause";
        PINT.CxnElt="WHWord";
    }
  }
  
  rule InterrogativePolar { 
    global { text_en = re".*\?" }
    pattern{
        ROOT -["root"]-> _anchor_; 
        _anchor_[xpos<>PINT];
    }
    without {PINT[xpos="PINT"]}
    without {WHADV[lemma="ⲡⲱⲥ"]}
    commands { 
        _anchor_.Cxn="Interrogative-Polar";
        _anchor_.CxnElt="Clause";
    }
  }

}

package npn {

    rule NPN { 
      pattern {
        _anchor_ [ xpos = re"N.*" ];
        N2 [xpos = re"N.*" ];
        _anchor_.lemma = N2.lemma;
        _anchor_ -> N2;
        N2 -[case]-> P;
        _anchor_ < P;
        P < N2;
      }
      without {
        _anchor_ -[case]-> P2;
        P2 << _anchor_
      }

        commands {_anchor_.Cxn="NPN";
          _anchor_.CxnElt="N1";
                  P.CxnElt="P";
                  N2.CxnElt="N2";}
                  }

}
